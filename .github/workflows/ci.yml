name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  detekt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: gradle/actions/setup-gradle@v4
      - name: Run Detekt
        run: ./gradlew clean detekt

  spotless:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: gradle/actions/setup-gradle@v4
      - name: Run Spotless Check
        run: ./gradlew clean spotlessCheck

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        name: Checkout

      - uses: actions/setup-java@v5
        name: Setup Java
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run Tests
        run: ./gradlew clean test

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }} # always run even if the previous step fails
        with:
          name: junit-test-results
          path: '**/build/test-results/test/TEST-*.xml'
          retention-days: 1

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  upload-plugin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        name: Checkout

      - uses: actions/setup-java@v5
        name: Setup Java
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Get Version
        run: |
          version=$(cat gradle.properties | grep version= | cut -d = -f 2)
          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Publish To Maven Local
        run: ./gradlew clean publishToMavenLocal

      - name: Upload Plugin
        uses: actions/upload-artifact@v4
        with:
          name: plugin
          path: /home/runner/.m2/repository/dev/aga/gradle/plugin/plugin/${{ env.VERSION }}/plugin-${{ env.VERSION }}.jar
          retention-days: 1
          if-no-files-found: error

  dsl-tests:
    runs-on: ubuntu-latest
    needs: [ upload-plugin ]
    strategy:
      matrix:
        gradle-version:
          - "8.4"
          - "8.4"
          - "8.6"
          - "8.7"
          - "8.8"
          - "8.9"
          - "8.10"
          - "8.12"
          - "8.13"
          - "8.14"
          - "9.0.0"
          - "release-nightly"
          - "release-candidate"
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
        name: Checkout

      - uses: actions/setup-java@v5
        name: Setup Java
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ matrix.gradle-version }}
          cache-read-only: true

      - name: Download
        uses: actions/download-artifact@v5
        with:
          name: plugin

      - name: Copy Plugin
        run: |
          cp plugin*.jar kotlin-example/libs/
          cp plugin*.jar groovy-example/libs/

      - name: Kotlin DSL
        working-directory: kotlin-example
        run: gradle assemble

      - name: Groovy DSL
        working-directory: groovy-example
        run: gradle assemble
